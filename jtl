#!/usr/bin/env python

# Main entry point for building and reporting on the
# lesson website.

import logging
from tasklib import *
import click

logger = logging.getLogger(__name__)

logging.basicConfig(level=logging.INFO)

root_dir = Path(__file__).parent.absolute()

@click.group()
def main():
    pass

@main.command(help="Build the website from the lesson plan")
def build():
    build_source(root_dir)


@main.command(help="Print configuration (tbd)")
def config():
    print("reporting")


@main.command(help="Deploy the website to Github Pages")
def deploy():
    import os
    from plumbum import local, FG
    from plumbum.cmd import cd, yarn, git
    from plumbum.commands.processes import ProcessExecutionError

    # Workaround errors on build due to openssl issues in Node 17
    os.environ['NODE_OPTIONS'] = '--openssl-legacy-provider'

    origin_url = git('remote', 'get-url', 'origin').strip()

    try:
        with local.cwd(root_dir / 'docs'):
           yarn['build'] & FG

        with local.cwd(root_dir / 'docs/src/.vuepress/dist'):
            git['init'] & FG
            git['add', '-A'] & FG
            git['commit', '-m', 'deploy'] & FG
            git['push', '-f', origin_url, 'master:gh-pages'] & FG

    except ProcessExecutionError as e:

        print(f"Command failed with exit code {e.retcode}: {e}")

        exit(e.retcode)

@main.command(help="Run the development server")
def serve():
    from plumbum import local, FG
    from plumbum.cmd import yarn

    with local.cwd(root_dir / 'docs'):
        yarn['dev'] & FG

@main.command(help="Development program")
def dev():

    lp = LessonPlan( root_dir / 'lessons', root_dir / 'docs/src', 'lessons')
    lp.write_dirs()



if __name__ == '__main__':
    main()